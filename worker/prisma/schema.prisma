// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  email String @unique
  password String 
  name String
  zap Zap[]
}

model Zap {
  id                  String @unique @default(uuid())
  userId              String
  name                String
  users               User @relation(fields: [userId], references: [id])
  triggerId           String
  action              Action[]
  trigger             Trigger?
  zapRun              ZapRun[]
  time                DateTime
}

model Trigger{
  id                  String  @default(uuid())
  zapId               String @unique
  availableTriggerId  String
  metadata            Json   @default("{}")
  zap                 Zap @relation(fields: [zapId], references: [id])
  type                AvialableTrigger @relation(fields: [availableTriggerId], references: [id])
}

model Action{
  id                  String @unique @default(uuid())
  availableActionId   String
  zapId               String
  sortingOrder        Int
  metadata            Json @default("{}")
  type                AvialableActions @relation(fields: [availableActionId], references: [id])
  zap                 Zap @relation(fields: [zapId], references: [id])
}

model AvialableTrigger{
  id String @unique @default(uuid())
  name String
  triggers Trigger[]
  image String

}

model AvialableActions{
  id String @default(uuid()) @unique
  name String
  actions Action[]
  image String
}

//A new table i.e ZapRun which will keep track of all zap runs

model ZapRun{
  id  String @id @default(uuid())
  zapId String
  metadata Json
  zap Zap @relation(fields: [zapId], references: [id])
  zapRunOutbox ZapRunOutbox?
}

//ZapRunOutbox whenever a zap run happens it needs to go to a kafka queue, Kafka will pickup from the ZapRunOutbox table

model ZapRunOutbox{
  id String @id @default(uuid())
  zapRunId String @unique
  zapRuns ZapRun @relation(fields: [zapRunId], references: [id])
}